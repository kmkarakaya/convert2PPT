{"slides": [{"slide_number": 1, "title": "LLMs for AI-Powered Applications", "subtitle": "Revolutionizing Software Development", "body": [{"type": "Heading", "content": "Introduction"}, {"type": "Bullet Point", "content": "Chapter 1 introduced LLMs as powerful foundation models with generative capabilities and common-sense reasoning."}, {"type": "Bullet Point", "content": "This chapter explores how LLMs are transforming software development and leading to a new era of AI-powered applications."}, {"type": "Heading", "content": "Key Topics"}, {"type": "Bullet Point", "content": "How LLMs are changing software development"}, {"type": "Bullet Point", "content": "The copilot system"}, {"type": "Bullet Point", "content": "Introducing AI orchestrators to embed LLMs into applications"}]}, {"slide_number": 2, "title": "LLMs: Changing the Game in Software Development", "subtitle": "", "body": [{"type": "Heading", "content": "LLMs: A New Frontier"}, {"type": "Bullet Point", "content": "LLMs demonstrate exceptional capabilities in tasks like summarization, named entity recognition, classification, and text generation."}, {"type": "Bullet Point", "content": "They go beyond just being powerful tools; LLMs are revolutionizing software development by serving as platforms for building sophisticated applications."}, {"type": "Heading", "content": "Shifting the Paradigm"}, {"type": "Bullet Point", "content": "Developers now leverage API calls to hosted LLMs, customizing them for specific needs."}, {"type": "Bullet Point", "content": "This shift enables easier and more efficient integration of AI into applications, similar to the transition from single-purpose computing to time-sharing."}]}, {"slide_number": 3, "title": "LLMs in Applications: Technical & Conceptual Aspects", "subtitle": "", "body": [{"type": "Heading", "content": "Technical Integration"}, {"type": "Bullet Point", "content": "Integrating LLMs into applications involves using REST API calls and managing them with AI orchestrators."}, {"type": "Bullet Point", "content": "This requires setting up architectural components that facilitate seamless communication with LLMs via API calls."}, {"type": "Bullet Point", "content": "AI orchestrators play a crucial role in efficiently managing and coordinating LLM functionality within applications."}, {"type": "Heading", "content": "Conceptual Impact"}, {"type": "Bullet Point", "content": "LLMs introduce a wide range of new capabilities that can be harnessed in applications."}, {"type": "Bullet Point", "content": "These capabilities will be explored in detail throughout the book."}, {"type": "Bullet Point", "content": "LLMs can be viewed as a new category of software, often referred to as \"copilots,\" emphasizing their significant assistance and collaboration in enhancing application functionalities."}]}, {"slide_number": 4, "title": "The Copilot System: A New Category of Software", "subtitle": "", "body": [{"type": "Heading", "content": "What is a Copilot?"}, {"type": "Bullet Point", "content": "Copilots are AI assistants designed to work alongside users, supporting them in complex tasks."}, {"type": "Bullet Point", "content": "This concept, coined by Microsoft, has been integrated into products like M365 Copilot and the new Bing, powered by GPT-4."}, {"type": "Heading", "content": "Key Features of Copilots"}, {"type": "Bullet Point", "content": "Powered by LLMs (or more generally, LFMs), acting as the reasoning engine."}, {"type": "Bullet Point", "content": "Utilize other technologies like apps, data sources, and user interfaces to provide a seamless experience."}, {"type": "Image", "content": "Figure 2.1: A Copilot Powered by an LLM"}]}, {"slide_number": 5, "title": "Copilots: Conversational UI & Grounding", "subtitle": "", "body": [{"type": "Heading", "content": "Conversational User Interface"}, {"type": "Bullet Point", "content": "Copilots are designed for natural language interaction, bridging the gap between complex systems and users."}, {"type": "Bullet Point", "content": "This eliminates the need for users to understand domain-specific taxonomies, making interactions more intuitive."}, {"type": "Image", "content": "Figure 2.2: Conversational UI Example"}, {"type": "Heading", "content": "Grounding: Defining the Scope"}, {"type": "Bullet Point", "content": "Copilots are grounded to domain-specific data, ensuring they respond only within the application's context."}, {"type": "Bullet Point", "content": "Grounding is achieved through Retrieval-Augmented Generation (RAG), a framework that incorporates external knowledge to enhance LLM responses."}]}, {"slide_number": 6, "title": "Grounding: Ensuring Relevance & Accuracy", "subtitle": "", "body": [{"type": "Heading", "content": "Grounding: A Crucial Concept"}, {"type": "Bullet Point", "content": "Grounding ensures that LLM responses are relevant, accurate, and up-to-date by using domain-specific information."}, {"type": "Bullet Point", "content": "For example, an LLM-powered research assistant would only respond based on the provided research papers, ensuring the output is grounded within the specific dataset."}, {"type": "Image", "content": "Figure 2.3: Example of Grounding a Copilot"}, {"type": "Heading", "content": "RAG: A Framework for Grounding"}, {"type": "Bullet Point", "content": "RAG serves as an architectural pattern that allows copilots to be grounded to domain-specific data."}, {"type": "Bullet Point", "content": "Other frameworks, like function calling and multi-agents, will be discussed later in the book."}]}, {"slide_number": 7, "title": "Copilot Capabilities: Extending Functionality", "subtitle": "", "body": [{"type": "Heading", "content": "Extending Copilot Capabilities"}, {"type": "Bullet Point", "content": "Copilot capabilities can be enhanced through \"skills,\" which can be code or calls to other models."}, {"type": "Heading", "content": "Addressing LLM Limitations"}, {"type": "Bullet Point", "content": "LLMs have two primary limitations: limited parametric knowledge and lack of executive power."}, {"type": "Heading", "content": "Limited Parametric Knowledge"}, {"type": "Bullet Point", "content": "This limitation arises from the knowledge base's cut-off date, making LLMs susceptible to outdated information."}, {"type": "Bullet Point", "content": "This issue can be mitigated by adding non-parametric knowledge through grounding."}]}, {"slide_number": 8, "title": "Copilot Capabilities: Addressing LLM Limitations", "subtitle": "", "body": [{"type": "Heading", "content": "Lack of Executive Power"}, {"type": "Bullet Point", "content": "LLMs themselves lack the ability to execute actions in the real world."}, {"type": "Bullet Point", "content": "For example, ChatGPT can generate a LinkedIn post, but it cannot directly post it online."}, {"type": "Heading", "content": "The Role of Plug-ins"}, {"type": "Bullet Point", "content": "Plug-ins act as LLMs' connectors to the external world, serving as both input and output sources."}, {"type": "Bullet Point", "content": "They extend LLMs' non-parametric knowledge (e.g., web search) and allow them to execute actions (e.g., posting on LinkedIn)."}]}, {"slide_number": 9, "title": "The Power of Prompt Engineering", "subtitle": "", "body": [{"type": "Heading", "content": "Prompt Engineering: Shaping LLM Interaction"}, {"type": "Bullet Point", "content": "The user's prompt in natural language is not the only input the model processes."}, {"type": "Bullet Point", "content": "It's a crucial component of the backend logic of LLM-powered applications and the set of instructions provided to the model."}, {"type": "Heading", "content": "Metaprompts or System Messages"}, {"type": "Bullet Point", "content": "These are the objects of a new discipline called prompt engineering."}, {"type": "Image", "content": "Figure 2.4: Example of Wikipedia and LinkedIn Plug-ins"}]}]}